#include<iostream>
using namespace std;
int num = 0;
int flag = 0;
struct Btree
{
    struct Btree* left;
    struct Btree* right;
    int data;
};
Btree* BuildTree()
{
    Btree* T = nullptr;
    int x = 0;
    scanf("%d", &x);
    if (!x)
        T = nullptr;
    else
    {
        T = new Btree();
        T->data = x;
        T->left = BuildTree();
        T->right = BuildTree();
    }
    return T;
}
void Delete(Btree*&T,int op)
{
    if(!T)
    {
        flag = 0;
        return;
    }
    if(T->data==op)
    {
        T = nullptr;
        flag = 1;
        return;
    }
    Delete(T->left,op);
    if(!flag)
        Delete(T->right,op);
}
void Inorder(Btree* T)
{
    if(!T) return;
    Inorder(T->left);
    printf("%d ",T->data);
    Inorder(T->right);
}
int main()
{
     Btree* root = BuildTree();
     int m = 0;
     scanf("%d",&m);
    while(m--)
    {
        flag = 0;
        scanf("%d",&num);
        Delete(root,num);
        if(flag)
        {
            Inorder(root);
            printf("\n");
        }
        else
            printf("0\n");
    }
}
